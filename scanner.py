import os
import hashlib

RED = "\033[91m"
BLUE = "\033[94m"
RESET = "\033[0m"

SUSPICIOUS_INDICATORS = [
    "win32crypt",
    "Crypto.Cipher",
    "base64.b64decode",
    "shutil.copyfile",
    "requests.post",
    "getpass.getuser",
]

SUSPICIOUS_HASHES = []

def check_file_content(file_path):
    try:
        if file_path.endswith(".exe") and "WindowsApps" not in file_path:
            with open(file_path, 'rb') as file:
                content = file.read().decode('latin-1')
                for indicator in SUSPICIOUS_INDICATORS:
                    if indicator in content:
                        print(f"{RED}[ALERT] Found suspicious indicator in {file_path}: {indicator}{RESET}")
                        return True
    except Exception as e:
        print(f"{BLUE}[ERROR]{RESET}Failed to check file content: {e}")
    return False

def get_file_hash(file_path):
    try:
        if file_path.endswith(".exe") and "WindowsApps" not in file_path:
            hasher = hashlib.sha256()
            with open(file_path, 'rb') as file:
                buffer = file.read()
                hasher.update(buffer)
            return hasher.hexdigest()
    except Exception as e:
        print(f"{BLUE}[ERROR]{RESET}Failed to calculate hash: {e}")
        return None

def monitor_files(directory):
    suspicious_files = []
    for dirpath, _, filenames in os.walk(directory):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            if filename.endswith(".exe"):
                if check_file_content(file_path):
                    suspicious_files.append(file_path)
                    print(f"{RED}[ALERT] Suspicious file detected: {file_path}{RESET}")
                file_hash = get_file_hash(file_path)
                if file_hash in SUSPICIOUS_HASHES:
                    suspicious_files.append(file_path)
                    print(f"{RED}[ALERT] File with suspicious hash detected: {file_path}{RESET}")
    return suspicious_files

def start_monitoring():
    print("Starting antivirus monitoring...")
    suspicious_files = []
    try:
        suspicious_files.extend(monitor_files(os.environ["USERPROFILE"]))
    finally:
        if suspicious_files:
            print(f"{RED}\nScan completed. Suspicious files detected:{RESET}")
            for file in suspicious_files:
                print(f"{RED}{file}{RESET}")
        else:
            print(f"{BLUE}\nScan completed. No viruses detected.{RESET}")
        
        input(f"\n{BLUE}Press any key to exit.{RESET}")

if __name__ == "__main__":
    start_monitoring()
